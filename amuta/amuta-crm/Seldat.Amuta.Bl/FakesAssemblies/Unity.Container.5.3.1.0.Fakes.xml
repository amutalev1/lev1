<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unity.Container.5.3.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Unity.Container.Fakes.ShimPolicyList">
            <summary>Shim type of Unity.Container.PolicyList</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimPolicyList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimPolicyList.#ctor(Unity.Container.PolicyList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.Container.Fakes.ShimPolicyList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.AllInstances.ClearAll">
            <summary>Sets the shim of PolicyList.ClearAll()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.AllInstances.ClearDefaultType">
            <summary>Sets the shim of PolicyList.ClearDefault(Type policyInterface)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.AllInstances.ClearTypeObject">
            <summary>Sets the shim of PolicyList.Clear(Type policyInterface, Object buildKey)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.AllInstances.CountGet">
            <summary>Sets the shim of PolicyList.get_Count()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.AllInstances.GetTypeObjectIPolicyListOut">
            <summary>Sets the shim of PolicyList.Get(Type policyInterface, Object buildKey, IPolicyList&amp; containingPolicyList)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.AllInstances.SetTypeIBuilderPolicyObject">
            <summary>Sets the shim of PolicyList.Set(Type policyInterface, IBuilderPolicy policy, Object buildKey)</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimPolicyList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimPolicyList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimPolicyList.Bind(Unity.Policy.IPolicyList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.ClearAll">
            <summary>Sets the shim of PolicyList.ClearAll()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.ClearDefaultType">
            <summary>Sets the shim of PolicyList.ClearDefault(Type policyInterface)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.ClearTypeObject">
            <summary>Sets the shim of PolicyList.Clear(Type policyInterface, Object buildKey)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.Constructor">
            <summary>Sets the shim of PolicyList.PolicyList()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.ConstructorIPolicyList">
            <summary>Sets the shim of PolicyList.PolicyList(IPolicyList innerPolicyList)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.CountGet">
            <summary>Sets the shim of PolicyList.get_Count()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.GetTypeObjectIPolicyListOut">
            <summary>Sets the shim of PolicyList.Get(Type policyInterface, Object buildKey, IPolicyList&amp; containingPolicyList)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimPolicyList.SetTypeIBuilderPolicyObject">
            <summary>Sets the shim of PolicyList.Set(Type policyInterface, IBuilderPolicy policy, Object buildKey)</summary>
        </member>
        <member name="T:Unity.Container.Fakes.ShimStagedStrategyChain`1">
            <summary>Shim type of Unity.Container.StagedStrategyChain`1</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.#ctor(Unity.Container.StagedStrategyChain{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AddIBuilderStrategyT0">
            <summary>Sets the shim of StagedStrategyChain`1.Add(IBuilderStrategy strategy, !0 stage)</summary>
        </member>
        <member name="T:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.AddIBuilderStrategyT0">
            <summary>Sets the shim of StagedStrategyChain`1.Add(IBuilderStrategy strategy, !0 stage)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.Clear">
            <summary>Sets the shim of StagedStrategyChain`1.Clear()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.Dispose">
            <summary>Sets the shim of StagedStrategyChain`1.Dispose()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.EnumerateInt32">
            <summary>Sets the shim of StagedStrategyChain`1.Enumerate(Int32 i)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of StagedStrategyChain`1.GetEnumerator()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.InvalidatedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of StagedStrategyChain`1.add_Invalidated(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.InvalidatedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of StagedStrategyChain`1.remove_Invalidated(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.MakeStrategyChain">
            <summary>Sets the shim of StagedStrategyChain`1.MakeStrategyChain()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.OnParentInvalidatedObjectEventArgs">
            <summary>Sets the shim of StagedStrategyChain`1.OnParentInvalidated(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of StagedStrategyChain`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.Bind(Unity.Strategy.IStagedStrategyChain)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.Bind(Unity.Strategy.IStagedStrategyChain{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStagedStrategyChain`1.Bind(System.Collections.Generic.IEnumerable{Unity.Builder.Strategy.IBuilderStrategy})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.Clear">
            <summary>Sets the shim of StagedStrategyChain`1.Clear()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.Constructor">
            <summary>Sets the shim of StagedStrategyChain`1.StagedStrategyChain`1()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.ConstructorStagedStrategyChainOfT0">
            <summary>Sets the shim of StagedStrategyChain`1.StagedStrategyChain`1(StagedStrategyChain`1&lt;!0&gt; innerChain)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.Dispose">
            <summary>Sets the shim of StagedStrategyChain`1.Dispose()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.EnumerateInt32">
            <summary>Sets the shim of StagedStrategyChain`1.Enumerate(Int32 i)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.GetEnumerator">
            <summary>Sets the shim of StagedStrategyChain`1.GetEnumerator()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.InvalidatedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of StagedStrategyChain`1.add_Invalidated(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.InvalidatedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of StagedStrategyChain`1.remove_Invalidated(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.MakeStrategyChain">
            <summary>Sets the shim of StagedStrategyChain`1.MakeStrategyChain()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.OnParentInvalidatedObjectEventArgs">
            <summary>Sets the shim of StagedStrategyChain`1.OnParentInvalidated(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStagedStrategyChain`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of StagedStrategyChain`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Unity.Container.Fakes.ShimStrategyChain">
            <summary>Shim type of Unity.Container.StrategyChain</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.#ctor(Unity.Container.StrategyChain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.Container.Fakes.ShimStrategyChain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.AllInstances.BuildUpIBuilderContext">
            <summary>Sets the shim of StrategyChain.BuildUp(IBuilderContext builderContext)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.AllInstances.GetEnumerator">
            <summary>Sets the shim of StrategyChain.GetEnumerator()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.AllInstances.SystemCollectionsGenericIEnumerableUnityBuilderStrategyIBuilderStrategyGetEnumerator">
            <summary>Sets the shim of StrategyChain.System.Collections.Generic.IEnumerable&lt;Unity.Builder.Strategy.IBuilderStrategy&gt;.GetEnumerator()</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.Bind(Unity.Policy.IBuildPlanPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.Bind(Unity.Strategy.IStrategyChain)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Fakes.ShimStrategyChain.Bind(System.Collections.Generic.IEnumerable{Unity.Builder.Strategy.IBuilderStrategy})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.BuildUpIBuilderContext">
            <summary>Sets the shim of StrategyChain.BuildUp(IBuilderContext builderContext)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.ConstructorIEnumerableOfIBuilderStrategy">
            <summary>Sets the shim of StrategyChain.StrategyChain(IEnumerable`1&lt;IBuilderStrategy&gt; strategies)</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.GetEnumerator">
            <summary>Sets the shim of StrategyChain.GetEnumerator()</summary>
        </member>
        <member name="P:Unity.Container.Fakes.ShimStrategyChain.SystemCollectionsGenericIEnumerableUnityBuilderStrategyIBuilderStrategyGetEnumerator">
            <summary>Sets the shim of StrategyChain.System.Collections.Generic.IEnumerable&lt;Unity.Builder.Strategy.IBuilderStrategy&gt;.GetEnumerator()</summary>
        </member>
        <member name="T:Unity.Container.Fakes.StubPolicyList">
            <summary>Stub type of Unity.Container.PolicyList</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubPolicyList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubPolicyList.#ctor(Unity.Policy.IPolicyList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubPolicyList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubPolicyList.InitializeStub">
            <summary>Initializes a new instance of type StubPolicyList</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubPolicyList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubPolicyList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.Container.Fakes.StubStagedStrategyChain`1">
            <summary>Stub type of Unity.Container.StagedStrategyChain`1</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubStagedStrategyChain`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubStagedStrategyChain`1.#ctor(Unity.Container.StagedStrategyChain{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubStagedStrategyChain`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubStagedStrategyChain`1.InitializeStub">
            <summary>Initializes a new instance of type StubStagedStrategyChain</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubStagedStrategyChain`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubStagedStrategyChain`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.Container.Fakes.StubStrategyChain">
            <summary>Stub type of Unity.Container.StrategyChain</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubStrategyChain.#ctor(System.Collections.Generic.IEnumerable{Unity.Builder.Strategy.IBuilderStrategy})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubStrategyChain.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.Container.Fakes.StubStrategyChain.InitializeStub">
            <summary>Initializes a new instance of type StubStrategyChain</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubStrategyChain.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.Container.Fakes.StubStrategyChain.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer">
            <summary>Shim type of Unity.Container.Lifetime.LifetimeContainer</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.#ctor(Unity.Container.Lifetime.LifetimeContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AddObject">
            <summary>Sets the shim of LifetimeContainer.Add(Object item)</summary>
        </member>
        <member name="T:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.AddObject">
            <summary>Sets the shim of LifetimeContainer.Add(Object item)</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.ContainsObject">
            <summary>Sets the shim of LifetimeContainer.Contains(Object item)</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.CountGet">
            <summary>Sets the shim of LifetimeContainer.get_Count()</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.Dispose">
            <summary>Sets the shim of LifetimeContainer.Dispose()</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.DisposeBoolean">
            <summary>Sets the shim of LifetimeContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.GetEnumerator">
            <summary>Sets the shim of LifetimeContainer.GetEnumerator()</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.RemoveObject">
            <summary>Sets the shim of LifetimeContainer.Remove(Object item)</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of LifetimeContainer.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.Bind(Unity.Lifetime.ILifetimeContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.Bind(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.Constructor">
            <summary>Sets the shim of LifetimeContainer.LifetimeContainer()</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.ContainsObject">
            <summary>Sets the shim of LifetimeContainer.Contains(Object item)</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.CountGet">
            <summary>Sets the shim of LifetimeContainer.get_Count()</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.Dispose">
            <summary>Sets the shim of LifetimeContainer.Dispose()</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.DisposeBoolean">
            <summary>Sets the shim of LifetimeContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.GetEnumerator">
            <summary>Sets the shim of LifetimeContainer.GetEnumerator()</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.RemoveObject">
            <summary>Sets the shim of LifetimeContainer.Remove(Object item)</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.ShimLifetimeContainer.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of LifetimeContainer.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Unity.Container.Lifetime.Fakes.StubLifetimeContainer">
            <summary>Stub type of Unity.Container.Lifetime.LifetimeContainer</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.StubLifetimeContainer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.StubLifetimeContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.StubLifetimeContainer.Dispose(System.Boolean)">
            <summary>Sets the stub of LifetimeContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Unity.Container.Lifetime.Fakes.StubLifetimeContainer.DisposeBoolean">
            <summary>Sets the stub of LifetimeContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Unity.Container.Lifetime.Fakes.StubLifetimeContainer.InitializeStub">
            <summary>Initializes a new instance of type StubLifetimeContainer</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.StubLifetimeContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.Container.Lifetime.Fakes.StubLifetimeContainer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.Container.Registration.Fakes.ShimContainerRegistration">
            <summary>Shim type of Unity.Container.Registration.ContainerRegistration</summary>
        </member>
        <member name="M:Unity.Container.Registration.Fakes.ShimContainerRegistration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.Container.Registration.Fakes.ShimContainerRegistration.#ctor(Unity.Container.Registration.ContainerRegistration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.GetLifetimeManagerIPolicyList">
            <summary>Sets the shim of ContainerRegistration.GetLifetimeManager(IPolicyList policies)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.GetMappedTypeIPolicyList">
            <summary>Sets the shim of ContainerRegistration.GetMappedType(IPolicyList policies)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.LifetimeManagerGet">
            <summary>Sets the shim of ContainerRegistration.get_LifetimeManager()</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.LifetimeManagerSetLifetimeManager">
            <summary>Sets the shim of ContainerRegistration.set_LifetimeManager(LifetimeManager value)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.MappedToTypeGet">
            <summary>Sets the shim of ContainerRegistration.get_MappedToType()</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.MappedToTypeSetType">
            <summary>Sets the shim of ContainerRegistration.set_MappedToType(Type value)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.NameGet">
            <summary>Sets the shim of ContainerRegistration.get_Name()</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.AllInstances.RegisteredTypeGet">
            <summary>Sets the shim of ContainerRegistration.get_RegisteredType()</summary>
        </member>
        <member name="M:Unity.Container.Registration.Fakes.ShimContainerRegistration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Registration.Fakes.ShimContainerRegistration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Container.Registration.Fakes.ShimContainerRegistration.Bind(Unity.Registration.IContainerRegistration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.ConstructorTypeStringIPolicyList">
            <summary>Sets the shim of ContainerRegistration.ContainerRegistration(Type registeredType, String name, IPolicyList policies)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.GetLifetimeManagerIPolicyList">
            <summary>Sets the shim of ContainerRegistration.GetLifetimeManager(IPolicyList policies)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.GetMappedTypeIPolicyList">
            <summary>Sets the shim of ContainerRegistration.GetMappedType(IPolicyList policies)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.LifetimeManagerGet">
            <summary>Sets the shim of ContainerRegistration.get_LifetimeManager()</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.LifetimeManagerSetLifetimeManager">
            <summary>Sets the shim of ContainerRegistration.set_LifetimeManager(LifetimeManager value)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.MappedToTypeGet">
            <summary>Sets the shim of ContainerRegistration.get_MappedToType()</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.MappedToTypeSetType">
            <summary>Sets the shim of ContainerRegistration.set_MappedToType(Type value)</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.NameGet">
            <summary>Sets the shim of ContainerRegistration.get_Name()</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.RegisteredTypeGet">
            <summary>Sets the shim of ContainerRegistration.get_RegisteredType()</summary>
        </member>
        <member name="P:Unity.Container.Registration.Fakes.ShimContainerRegistration.StaticConstructor">
            <summary>Sets the shim of ContainerRegistration.ContainerRegistration()</summary>
        </member>
        <member name="T:Unity.Fakes.ShimUnityContainer">
            <summary>Shim type of Unity.UnityContainer</summary>
        </member>
        <member name="M:Unity.Fakes.ShimUnityContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.Fakes.ShimUnityContainer.#ctor(Unity.UnityContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AddExtensionUnityContainerExtension">
            <summary>Sets the shim of UnityContainer.AddExtension(UnityContainerExtension extension)</summary>
        </member>
        <member name="T:Unity.Fakes.ShimUnityContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.AddExtensionUnityContainerExtension">
            <summary>Sets the shim of UnityContainer.AddExtension(UnityContainerExtension extension)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.BuildUpTypeObjectStringResolverOverrideArray">
            <summary>Sets the shim of UnityContainer.BuildUp(Type typeToBuild, Object existing, String name, ResolverOverride[] resolverOverrides)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.ChildContainerCreatedAddEventHandlerOfChildContainerCreatedEventArgs">
            <summary>Sets the shim of UnityContainer.add_ChildContainerCreated(EventHandler`1&lt;ChildContainerCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.ChildContainerCreatedRemoveEventHandlerOfChildContainerCreatedEventArgs">
            <summary>Sets the shim of UnityContainer.remove_ChildContainerCreated(EventHandler`1&lt;ChildContainerCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.ConfigureType">
            <summary>Sets the shim of UnityContainer.Configure(Type configurationInterface)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.CreateChildContainer">
            <summary>Sets the shim of UnityContainer.CreateChildContainer()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.Dispose">
            <summary>Sets the shim of UnityContainer.Dispose()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.DisposeBoolean">
            <summary>Sets the shim of UnityContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.FillTypeRegistrationDictionaryIDictionaryOfTypeListOfString">
            <summary>Sets the shim of UnityContainer.FillTypeRegistrationDictionary(IDictionary`2&lt;Type,List`1&lt;String&gt;&gt; typeRegistrations)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.InitializeStrategies">
            <summary>Sets the shim of UnityContainer.InitializeStrategies()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.ParentGet">
            <summary>Sets the shim of UnityContainer.get_Parent()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RegisterInstanceTypeStringObjectLifetimeManager">
            <summary>Sets the shim of UnityContainer.RegisterInstance(Type toType, String name, Object instance, LifetimeManager manager)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RegisterTypeTypeTypeStringLifetimeManagerInjectionMemberArray">
            <summary>Sets the shim of UnityContainer.RegisterType(Type typeFrom, Type typeTo, String name, LifetimeManager lifetimeManager, InjectionMember[] injectionMembers)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RegisteringAddEventHandlerOfRegisterEventArgs">
            <summary>Sets the shim of UnityContainer.add_Registering(EventHandler`1&lt;RegisterEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RegisteringInstanceAddEventHandlerOfRegisterInstanceEventArgs">
            <summary>Sets the shim of UnityContainer.add_RegisteringInstance(EventHandler`1&lt;RegisterInstanceEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RegisteringInstanceRemoveEventHandlerOfRegisterInstanceEventArgs">
            <summary>Sets the shim of UnityContainer.remove_RegisteringInstance(EventHandler`1&lt;RegisterInstanceEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RegisteringRemoveEventHandlerOfRegisterEventArgs">
            <summary>Sets the shim of UnityContainer.remove_Registering(EventHandler`1&lt;RegisterEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RegistrationsGet">
            <summary>Sets the shim of UnityContainer.get_Registrations()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.RemoveAllExtensions">
            <summary>Sets the shim of UnityContainer.RemoveAllExtensions()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.ResolveTypeStringResolverOverrideArray">
            <summary>Sets the shim of UnityContainer.Resolve(Type type, String name, ResolverOverride[] resolverOverrides)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances.SetLifetimeManagerTypeStringLifetimeManager">
            <summary>Sets the shim of UnityContainer.SetLifetimeManager(Type lifetimeType, String name, LifetimeManager lifetimeManager)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.AllInstances._get_Registrationsb__14_1TypeString">
            <summary>Sets the shim of UnityContainer.&lt;get_Registrations&gt;b__14_1(Type type, String name)</summary>
        </member>
        <member name="M:Unity.Fakes.ShimUnityContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Fakes.ShimUnityContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Fakes.ShimUnityContainer.Bind(Unity.IUnityContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.Fakes.ShimUnityContainer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.BuildUpTypeObjectStringResolverOverrideArray">
            <summary>Sets the shim of UnityContainer.BuildUp(Type typeToBuild, Object existing, String name, ResolverOverride[] resolverOverrides)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.ChildContainerCreatedAddEventHandlerOfChildContainerCreatedEventArgs">
            <summary>Sets the shim of UnityContainer.add_ChildContainerCreated(EventHandler`1&lt;ChildContainerCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.ChildContainerCreatedRemoveEventHandlerOfChildContainerCreatedEventArgs">
            <summary>Sets the shim of UnityContainer.remove_ChildContainerCreated(EventHandler`1&lt;ChildContainerCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.ConfigureType">
            <summary>Sets the shim of UnityContainer.Configure(Type configurationInterface)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.Constructor">
            <summary>Sets the shim of UnityContainer.UnityContainer()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.ConstructorUnityContainer">
            <summary>Sets the shim of UnityContainer.UnityContainer(UnityContainer parent)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.CreateChildContainer">
            <summary>Sets the shim of UnityContainer.CreateChildContainer()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.Dispose">
            <summary>Sets the shim of UnityContainer.Dispose()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.DisposeBoolean">
            <summary>Sets the shim of UnityContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.FillTypeRegistrationDictionaryIDictionaryOfTypeListOfString">
            <summary>Sets the shim of UnityContainer.FillTypeRegistrationDictionary(IDictionary`2&lt;Type,List`1&lt;String&gt;&gt; typeRegistrations)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.GetTypeNameObject">
            <summary>Sets the shim of UnityContainer.GetTypeName(Object assignmentInstance)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.InitializeStrategies">
            <summary>Sets the shim of UnityContainer.InitializeStrategies()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.InstanceIsAssignableTypeObjectString">
            <summary>Sets the shim of UnityContainer.InstanceIsAssignable(Type assignmentTargetType, Object assignmentInstance, String argumentName)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.ParentGet">
            <summary>Sets the shim of UnityContainer.get_Parent()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RegisterInstanceTypeStringObjectLifetimeManager">
            <summary>Sets the shim of UnityContainer.RegisterInstance(Type toType, String name, Object instance, LifetimeManager manager)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RegisterTypeTypeTypeStringLifetimeManagerInjectionMemberArray">
            <summary>Sets the shim of UnityContainer.RegisterType(Type typeFrom, Type typeTo, String name, LifetimeManager lifetimeManager, InjectionMember[] injectionMembers)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RegisteringAddEventHandlerOfRegisterEventArgs">
            <summary>Sets the shim of UnityContainer.add_Registering(EventHandler`1&lt;RegisterEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RegisteringInstanceAddEventHandlerOfRegisterInstanceEventArgs">
            <summary>Sets the shim of UnityContainer.add_RegisteringInstance(EventHandler`1&lt;RegisterInstanceEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RegisteringInstanceRemoveEventHandlerOfRegisterInstanceEventArgs">
            <summary>Sets the shim of UnityContainer.remove_RegisteringInstance(EventHandler`1&lt;RegisterInstanceEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RegisteringRemoveEventHandlerOfRegisterEventArgs">
            <summary>Sets the shim of UnityContainer.remove_Registering(EventHandler`1&lt;RegisterEventArgs&gt; value)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RegistrationsGet">
            <summary>Sets the shim of UnityContainer.get_Registrations()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.RemoveAllExtensions">
            <summary>Sets the shim of UnityContainer.RemoveAllExtensions()</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.ResolveTypeStringResolverOverrideArray">
            <summary>Sets the shim of UnityContainer.Resolve(Type type, String name, ResolverOverride[] resolverOverrides)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer.SetLifetimeManagerTypeStringLifetimeManager">
            <summary>Sets the shim of UnityContainer.SetLifetimeManager(Type lifetimeType, String name, LifetimeManager lifetimeManager)</summary>
        </member>
        <member name="P:Unity.Fakes.ShimUnityContainer._get_Registrationsb__14_1TypeString">
            <summary>Sets the shim of UnityContainer.&lt;get_Registrations&gt;b__14_1(Type type, String name)</summary>
        </member>
        <member name="T:Unity.Fakes.StubUnityContainer">
            <summary>Stub type of Unity.UnityContainer</summary>
        </member>
        <member name="M:Unity.Fakes.StubUnityContainer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.Fakes.StubUnityContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.Fakes.StubUnityContainer.Dispose(System.Boolean)">
            <summary>Sets the stub of UnityContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Unity.Fakes.StubUnityContainer.DisposeBoolean">
            <summary>Sets the stub of UnityContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Unity.Fakes.StubUnityContainer.InitializeStub">
            <summary>Initializes a new instance of type StubUnityContainer</summary>
        </member>
        <member name="P:Unity.Fakes.StubUnityContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.Fakes.StubUnityContainer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicBuildPlanGenerationContext</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.#ctor(Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicBuildPlanGenerationContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AddToBuildPlanExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.AddToBuildPlan(Expression expression)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.AddToBuildPlanExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.AddToBuildPlan(Expression expression)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.ContextParameterGet">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.get_ContextParameter()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.CreateParameterExpressionIDependencyResolverPolicyTypeExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.CreateParameterExpression(IDependencyResolverPolicy resolver, Type parameterType, Expression setOperationExpression)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.GetBuildMethod">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetBuildMethod()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.GetClearCurrentOperationExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetClearCurrentOperationExpression()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.GetExistingObjectExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetExistingObjectExpression()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.GetResolveDependencyExpressionTypeIDependencyResolverPolicy">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetResolveDependencyExpression(Type dependencyType, IDependencyResolverPolicy resolver)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.RestoreCurrentOperationExpressionParameterExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.RestoreCurrentOperationExpression(ParameterExpression savedOperationExpression)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.SaveCurrentOperationExpressionParameterExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.SaveCurrentOperationExpression(ParameterExpression saveExpression)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.AllInstances.TypeToBuildGet">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.get_TypeToBuild()</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.ConstructorType">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.DynamicBuildPlanGenerationContext(Type typeToBuild)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.ContextParameterGet">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.get_ContextParameter()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.CreateParameterExpressionIDependencyResolverPolicyTypeExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.CreateParameterExpression(IDependencyResolverPolicy resolver, Type parameterType, Expression setOperationExpression)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.GetBuildMethod">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetBuildMethod()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.GetClearCurrentOperationExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetClearCurrentOperationExpression()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.GetExistingObjectExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetExistingObjectExpression()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.GetResolveDependencyExpressionTypeIDependencyResolverPolicy">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetResolveDependencyExpression(Type dependencyType, IDependencyResolverPolicy resolver)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.GetResolverIBuilderContextTypeIDependencyResolverPolicy">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.GetResolver(IBuilderContext context, Type dependencyType, IDependencyResolverPolicy resolver)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.RestoreCurrentOperationExpressionParameterExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.RestoreCurrentOperationExpression(ParameterExpression savedOperationExpression)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.SaveCurrentOperationExpressionParameterExpression">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.SaveCurrentOperationExpression(ParameterExpression saveExpression)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.StaticConstructor">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.DynamicBuildPlanGenerationContext()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicBuildPlanGenerationContext.TypeToBuildGet">
            <summary>Sets the shim of DynamicBuildPlanGenerationContext.get_TypeToBuild()</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodBuildPlan</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.#ctor(Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodBuildPlan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.AllInstances.BuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodBuildPlan.BuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.Bind(Unity.Policy.IBuildPlanPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.BuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodBuildPlan.BuildUp(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlan.ConstructorDynamicBuildPlanMethod">
            <summary>Sets the shim of DynamicMethodBuildPlan.DynamicMethodBuildPlan(DynamicBuildPlanMethod buildMethod)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.#ctor(Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodBuildPlanCreatorPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.AllInstances.CreatePlanIBuilderContextNamedTypeBuildKey">
            <summary>Sets the shim of DynamicMethodBuildPlanCreatorPolicy.CreatePlan(IBuilderContext context, NamedTypeBuildKey buildKey)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.AllInstances.GetContextIBuilderContextNamedTypeBuildKeyDynamicBuildPlanGenerationContext">
            <summary>Sets the shim of DynamicMethodBuildPlanCreatorPolicy.GetContext(IBuilderContext originalContext, NamedTypeBuildKey buildKey, DynamicBuildPlanGenerationContext generatorContext)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.Bind(Unity.Policy.IBuildPlanCreatorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.ConstructorIStagedStrategyChain">
            <summary>Sets the shim of DynamicMethodBuildPlanCreatorPolicy.DynamicMethodBuildPlanCreatorPolicy(IStagedStrategyChain strategies)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.CreatePlanIBuilderContextNamedTypeBuildKey">
            <summary>Sets the shim of DynamicMethodBuildPlanCreatorPolicy.CreatePlan(IBuilderContext context, NamedTypeBuildKey buildKey)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodBuildPlanCreatorPolicy.GetContextIBuilderContextNamedTypeBuildKeyDynamicBuildPlanGenerationContext">
            <summary>Sets the shim of DynamicMethodBuildPlanCreatorPolicy.GetContext(IBuilderContext originalContext, NamedTypeBuildKey buildKey, DynamicBuildPlanGenerationContext generatorContext)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodCallStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.#ctor(Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodCallStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.AllInstances.BuildMethodParameterExpressionsDynamicBuildPlanGenerationContextSelectedMethodString">
            <summary>Sets the shim of DynamicMethodCallStrategy.BuildMethodParameterExpressions(DynamicBuildPlanGenerationContext context, SelectedMethod method, String methodSignature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.AllInstances.PreBuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodCallStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.Bind(Unity.Builder.Strategy.IBuilderStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.BuildMethodParameterExpressionsDynamicBuildPlanGenerationContextSelectedMethodString">
            <summary>Sets the shim of DynamicMethodCallStrategy.BuildMethodParameterExpressions(DynamicBuildPlanGenerationContext context, SelectedMethod method, String methodSignature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.Constructor">
            <summary>Sets the shim of DynamicMethodCallStrategy.DynamicMethodCallStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.GetMethodSignatureMethodBase">
            <summary>Sets the shim of DynamicMethodCallStrategy.GetMethodSignature(MethodBase method)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.GuardMethodHasNoOutParamsMethodInfo">
            <summary>Sets the shim of DynamicMethodCallStrategy.GuardMethodHasNoOutParams(MethodInfo method)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.GuardMethodHasNoRefParamsMethodInfo">
            <summary>Sets the shim of DynamicMethodCallStrategy.GuardMethodHasNoRefParams(MethodInfo method)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.GuardMethodIsNotOpenGenericMethodInfo">
            <summary>Sets the shim of DynamicMethodCallStrategy.GuardMethodIsNotOpenGeneric(MethodInfo method)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodCallStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.SetCurrentOperationToInvokingMethodStringIBuilderContext">
            <summary>Sets the shim of DynamicMethodCallStrategy.SetCurrentOperationToInvokingMethod(String methodSignature, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.SetCurrentOperationToResolvingParameterStringStringIBuilderContext">
            <summary>Sets the shim of DynamicMethodCallStrategy.SetCurrentOperationToResolvingParameter(String parameterName, String methodSignature, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.StaticConstructor">
            <summary>Sets the shim of DynamicMethodCallStrategy.DynamicMethodCallStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodCallStrategy.ThrowIllegalInjectionMethodStringMethodInfo">
            <summary>Sets the shim of DynamicMethodCallStrategy.ThrowIllegalInjectionMethod(String format, MethodInfo method)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodConstructorStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.#ctor(Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodConstructorStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.AllInstances.BuildConstructionParameterExpressionsDynamicBuildPlanGenerationContextSelectedConstructorString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.BuildConstructionParameterExpressions(DynamicBuildPlanGenerationContext buildContext, SelectedConstructor selectedConstructor, String constructorSignature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.AllInstances.CreateInstanceBuildupExpressionDynamicBuildPlanGenerationContextIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateInstanceBuildupExpression(DynamicBuildPlanGenerationContext buildContext, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.AllInstances.CreateNewBuildupSequenceDynamicBuildPlanGenerationContextSelectedConstructorString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateNewBuildupSequence(DynamicBuildPlanGenerationContext buildContext, SelectedConstructor selectedConstructor, String signature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.AllInstances.PreBuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.Bind(Unity.Builder.Strategy.IBuilderStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.BuildConstructionParameterExpressionsDynamicBuildPlanGenerationContextSelectedConstructorString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.BuildConstructionParameterExpressions(DynamicBuildPlanGenerationContext buildContext, SelectedConstructor selectedConstructor, String constructorSignature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.Constructor">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.DynamicMethodConstructorStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.CreateInstanceBuildupExpressionDynamicBuildPlanGenerationContextIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateInstanceBuildupExpression(DynamicBuildPlanGenerationContext buildContext, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.CreateNewBuildupSequenceDynamicBuildPlanGenerationContextSelectedConstructorString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateNewBuildupSequence(DynamicBuildPlanGenerationContext buildContext, SelectedConstructor selectedConstructor, String signature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.CreateSignatureStringConstructorInfo">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateSignatureString(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.CreateThrowForNullExistingObjectWithInvalidConstructorDynamicBuildPlanGenerationContextString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateThrowForNullExistingObjectWithInvalidConstructor(DynamicBuildPlanGenerationContext buildContext, String signature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.CreateThrowForReferenceItselfMethodConstructorDynamicBuildPlanGenerationContextString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateThrowForReferenceItselfMethodConstructor(DynamicBuildPlanGenerationContext buildContext, String signature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.CreateThrowWithContextDynamicBuildPlanGenerationContextMethodInfo">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.CreateThrowWithContext(DynamicBuildPlanGenerationContext buildContext, MethodInfo throwMethod)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.GuardTypeIsNonPrimitiveIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.GuardTypeIsNonPrimitive(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.IsInvalidConstructorTypeInfoIBuilderContextSelectedConstructor">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.IsInvalidConstructor(TypeInfo target, IBuilderContext context, SelectedConstructor selectedConstructor)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.SetCurrentOperationToInvokingConstructorStringIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.SetCurrentOperationToInvokingConstructor(String constructorSignature, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.SetCurrentOperationToResolvingParameterStringStringIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.SetCurrentOperationToResolvingParameter(String parameterName, String constructorSignature, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.SetPerBuildSingletonIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.SetPerBuildSingleton(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.StaticConstructor">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.DynamicMethodConstructorStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.ThrowForAttemptingToConstructAbstractClassIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.ThrowForAttemptingToConstructAbstractClass(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.ThrowForAttemptingToConstructDelegateIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.ThrowForAttemptingToConstructDelegate(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.ThrowForAttemptingToConstructInterfaceIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.ThrowForAttemptingToConstructInterface(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.ThrowForNullExistingObjectIBuilderContext">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.ThrowForNullExistingObject(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.ThrowForNullExistingObjectWithInvalidConstructorIBuilderContextString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.ThrowForNullExistingObjectWithInvalidConstructor(IBuilderContext context, String signature)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodConstructorStrategy.ThrowForReferenceItselfConstructorIBuilderContextString">
            <summary>Sets the shim of DynamicMethodConstructorStrategy.ThrowForReferenceItselfConstructor(IBuilderContext context, String signature)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodPropertySetterStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.#ctor(Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodPropertySetterStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.AllInstances.PreBuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodPropertySetterStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.Bind(Unity.Builder.Strategy.IBuilderStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.Constructor">
            <summary>Sets the shim of DynamicMethodPropertySetterStrategy.DynamicMethodPropertySetterStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.GetValidatedPropertySetterPropertyInfo">
            <summary>Sets the shim of DynamicMethodPropertySetterStrategy.GetValidatedPropertySetter(PropertyInfo property)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the shim of DynamicMethodPropertySetterStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.SetCurrentOperationToResolvingPropertyValueStringIBuilderContext">
            <summary>Sets the shim of DynamicMethodPropertySetterStrategy.SetCurrentOperationToResolvingPropertyValue(String propertyName, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.SetCurrentOperationToSettingPropertyStringIBuilderContext">
            <summary>Sets the shim of DynamicMethodPropertySetterStrategy.SetCurrentOperationToSettingProperty(String propertyName, IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.ShimDynamicMethodPropertySetterStrategy.StaticConstructor">
            <summary>Sets the shim of DynamicMethodPropertySetterStrategy.DynamicMethodPropertySetterStrategy()</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicBuildPlanGenerationContext">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicBuildPlanGenerationContext</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicBuildPlanGenerationContext.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicBuildPlanGenerationContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicBuildPlanGenerationContext.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicBuildPlanGenerationContext</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicBuildPlanGenerationContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicBuildPlanGenerationContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlan">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodBuildPlan</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlan.#ctor(Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicBuildPlanMethod)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlan.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicMethodBuildPlan</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlanCreatorPolicy">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlanCreatorPolicy.#ctor(Unity.Strategy.IStagedStrategyChain)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlanCreatorPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlanCreatorPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlanCreatorPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodBuildPlanCreatorPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodCallStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicMethodCallStrategy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.PostBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.PreBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of DynamicMethodCallStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodCallStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the stub of DynamicMethodCallStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodConstructorStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicMethodConstructorStrategy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.PostBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.PreBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of DynamicMethodConstructorStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodConstructorStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the stub of DynamicMethodConstructorStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.DynamicMethod.DynamicMethodPropertySetterStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicMethodPropertySetterStrategy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.PostBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.PreBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of DynamicMethodPropertySetterStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.DynamicMethod.Fakes.StubDynamicMethodPropertySetterStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the stub of DynamicMethodPropertySetterStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.EnumerableDynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.#ctor(Unity.ObjectBuilder.BuildPlan.EnumerableDynamicMethodBuildPlanCreatorPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.AllInstances.CreatePlanIBuilderContextNamedTypeBuildKey">
            <summary>Sets the shim of EnumerableDynamicMethodBuildPlanCreatorPolicy.CreatePlan(IBuilderContext context, NamedTypeBuildKey buildKey)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.Bind(Unity.Policy.IBuildPlanCreatorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.BuildResolveEnumerableOf1IBuilderContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Unity.Builder.IBuilderContext})">
            <summary>Sets the shim of EnumerableDynamicMethodBuildPlanCreatorPolicy.BuildResolveEnumerable(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.Constructor">
            <summary>Sets the shim of EnumerableDynamicMethodBuildPlanCreatorPolicy.EnumerableDynamicMethodBuildPlanCreatorPolicy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.CreatePlanIBuilderContextNamedTypeBuildKey">
            <summary>Sets the shim of EnumerableDynamicMethodBuildPlanCreatorPolicy.CreatePlan(IBuilderContext context, NamedTypeBuildKey buildKey)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimEnumerableDynamicMethodBuildPlanCreatorPolicy.StaticConstructor">
            <summary>Sets the shim of EnumerableDynamicMethodBuildPlanCreatorPolicy.EnumerableDynamicMethodBuildPlanCreatorPolicy()</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.LazyDynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.#ctor(Unity.ObjectBuilder.BuildPlan.LazyDynamicMethodBuildPlanCreatorPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.AllInstances.CreatePlanIBuilderContextNamedTypeBuildKey">
            <summary>Sets the shim of LazyDynamicMethodBuildPlanCreatorPolicy.CreatePlan(IBuilderContext context, NamedTypeBuildKey buildKey)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.Bind(Unity.Policy.IBuildPlanCreatorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.BuildResolveAllLazyOf1IBuilderContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Unity.Builder.IBuilderContext})">
            <summary>Sets the shim of LazyDynamicMethodBuildPlanCreatorPolicy.BuildResolveAllLazy(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.BuildResolveLazyOf1IBuilderContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Unity.Builder.IBuilderContext})">
            <summary>Sets the shim of LazyDynamicMethodBuildPlanCreatorPolicy.BuildResolveLazy(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.Constructor">
            <summary>Sets the shim of LazyDynamicMethodBuildPlanCreatorPolicy.LazyDynamicMethodBuildPlanCreatorPolicy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.CreateBuildPlanMethodType">
            <summary>Sets the shim of LazyDynamicMethodBuildPlanCreatorPolicy.CreateBuildPlanMethod(Type lazyType)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.CreatePlanIBuilderContextNamedTypeBuildKey">
            <summary>Sets the shim of LazyDynamicMethodBuildPlanCreatorPolicy.CreatePlan(IBuilderContext context, NamedTypeBuildKey buildKey)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.ShimLazyDynamicMethodBuildPlanCreatorPolicy.StaticConstructor">
            <summary>Sets the shim of LazyDynamicMethodBuildPlanCreatorPolicy.LazyDynamicMethodBuildPlanCreatorPolicy()</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Fakes.StubEnumerableDynamicMethodBuildPlanCreatorPolicy">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.EnumerableDynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.StubEnumerableDynamicMethodBuildPlanCreatorPolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.StubEnumerableDynamicMethodBuildPlanCreatorPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.StubEnumerableDynamicMethodBuildPlanCreatorPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubEnumerableDynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.StubEnumerableDynamicMethodBuildPlanCreatorPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.StubEnumerableDynamicMethodBuildPlanCreatorPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Fakes.StubLazyDynamicMethodBuildPlanCreatorPolicy">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.LazyDynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.StubLazyDynamicMethodBuildPlanCreatorPolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.StubLazyDynamicMethodBuildPlanCreatorPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Fakes.StubLazyDynamicMethodBuildPlanCreatorPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubLazyDynamicMethodBuildPlanCreatorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.StubLazyDynamicMethodBuildPlanCreatorPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Fakes.StubLazyDynamicMethodBuildPlanCreatorPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.Selection.ConstructorSelectorPolicy`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.#ctor(Unity.ObjectBuilder.BuildPlan.Selection.ConstructorSelectorPolicy{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.AllInstances.CreateResolverParameterInfo">
            <summary>Sets the shim of ConstructorSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.Bind(Unity.Policy.IConstructorSelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.Constructor">
            <summary>Sets the shim of ConstructorSelectorPolicy`1.ConstructorSelectorPolicy`1()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicy`1.CreateResolverParameterInfo">
            <summary>Sets the shim of ConstructorSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.Selection.ConstructorSelectorPolicyBase`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.#ctor(Unity.ObjectBuilder.BuildPlan.Selection.ConstructorSelectorPolicyBase{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.AllInstances.CreateSelectedConstructorConstructorInfo">
            <summary>Sets the shim of ConstructorSelectorPolicyBase`1.CreateSelectedConstructor(ConstructorInfo ctor)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.AllInstances.SelectConstructorIBuilderContextIPolicyList">
            <summary>Sets the shim of ConstructorSelectorPolicyBase`1.SelectConstructor(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.Bind(Unity.Policy.IConstructorSelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.Constructor">
            <summary>Sets the shim of ConstructorSelectorPolicyBase`1.ConstructorSelectorPolicyBase`1()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.CreateSelectedConstructorConstructorInfo">
            <summary>Sets the shim of ConstructorSelectorPolicyBase`1.CreateSelectedConstructor(ConstructorInfo ctor)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.FindInjectionConstructorType">
            <summary>Sets the shim of ConstructorSelectorPolicyBase`1.FindInjectionConstructor(Type typeToConstruct)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.FindLongestConstructorType">
            <summary>Sets the shim of ConstructorSelectorPolicyBase`1.FindLongestConstructor(Type typeToConstruct)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimConstructorSelectorPolicyBase`1.SelectConstructorIBuilderContextIPolicyList">
            <summary>Sets the shim of ConstructorSelectorPolicyBase`1.SelectConstructor(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.Selection.DefaultUnityConstructorSelectorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.#ctor(Unity.ObjectBuilder.BuildPlan.Selection.DefaultUnityConstructorSelectorPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.AllInstances.CreateResolverParameterInfo">
            <summary>Sets the shim of DefaultUnityConstructorSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.Bind(Unity.Policy.IConstructorSelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.Constructor">
            <summary>Sets the shim of DefaultUnityConstructorSelectorPolicy.DefaultUnityConstructorSelectorPolicy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimDefaultUnityConstructorSelectorPolicy.CreateResolverParameterInfo">
            <summary>Sets the shim of DefaultUnityConstructorSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.Selection.MethodSelectorPolicy`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.#ctor(Unity.ObjectBuilder.BuildPlan.Selection.MethodSelectorPolicy{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.AllInstances.CreateResolverParameterInfo">
            <summary>Sets the shim of MethodSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.Bind(Unity.Policy.IMethodSelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.Constructor">
            <summary>Sets the shim of MethodSelectorPolicy`1.MethodSelectorPolicy`1()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicy`1.CreateResolverParameterInfo">
            <summary>Sets the shim of MethodSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.Selection.MethodSelectorPolicyBase`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.#ctor(Unity.ObjectBuilder.BuildPlan.Selection.MethodSelectorPolicyBase{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.AllInstances.CreateSelectedMethodMethodInfo">
            <summary>Sets the shim of MethodSelectorPolicyBase`1.CreateSelectedMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.AllInstances.SelectMethodsIBuilderContextIPolicyList">
            <summary>Sets the shim of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.Bind(Unity.Policy.IMethodSelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.Constructor">
            <summary>Sets the shim of MethodSelectorPolicyBase`1.MethodSelectorPolicyBase`1()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.CreateSelectedMethodMethodInfo">
            <summary>Sets the shim of MethodSelectorPolicyBase`1.CreateSelectedMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimMethodSelectorPolicyBase`1.SelectMethodsIBuilderContextIPolicyList">
            <summary>Sets the shim of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1">
            <summary>Shim type of Unity.ObjectBuilder.BuildPlan.Selection.PropertySelectorPolicy`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.#ctor(Unity.ObjectBuilder.BuildPlan.Selection.PropertySelectorPolicy{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.AllInstances.CreateResolverPropertyInfo">
            <summary>Sets the shim of PropertySelectorPolicy`1.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.Bind(Unity.Policy.IPropertySelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.Constructor">
            <summary>Sets the shim of PropertySelectorPolicy`1.PropertySelectorPolicy`1()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.ShimPropertySelectorPolicy`1.CreateResolverPropertyInfo">
            <summary>Sets the shim of PropertySelectorPolicy`1.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.Selection.ConstructorSelectorPolicy`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1.CreateResolver(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of ConstructorSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1.CreateResolverParameterInfo">
            <summary>Sets the stub of ConstructorSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorSelectorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicy`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.Selection.ConstructorSelectorPolicyBase`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1.CreateResolver(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of ConstructorSelectorPolicyBase`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1.CreateResolverParameterInfo">
            <summary>Sets the stub of ConstructorSelectorPolicyBase`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorSelectorPolicyBase</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubConstructorSelectorPolicyBase`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.Selection.DefaultUnityConstructorSelectorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy.CreateResolver(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of DefaultUnityConstructorSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy.CreateResolverParameterInfo">
            <summary>Sets the stub of DefaultUnityConstructorSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultUnityConstructorSelectorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubDefaultUnityConstructorSelectorPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.Selection.MethodSelectorPolicy`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.CreateResolver(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of MethodSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.CreateResolverParameterInfo">
            <summary>Sets the stub of MethodSelectorPolicy`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.InitializeStub">
            <summary>Initializes a new instance of type StubMethodSelectorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.SelectMethods(Unity.Builder.IBuilderContext,Unity.Policy.IPolicyList)">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicy`1.SelectMethodsIBuilderContextIPolicyList">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.Selection.MethodSelectorPolicyBase`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.CreateResolver(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.CreateResolverParameterInfo">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.InitializeStub">
            <summary>Initializes a new instance of type StubMethodSelectorPolicyBase</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.SelectMethods(Unity.Builder.IBuilderContext,Unity.Policy.IPolicyList)">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubMethodSelectorPolicyBase`1.SelectMethodsIBuilderContextIPolicyList">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1">
            <summary>Stub type of Unity.ObjectBuilder.BuildPlan.Selection.PropertySelectorPolicy`1</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.CreateResolver(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of PropertySelectorPolicy`1.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.CreateResolverPropertyInfo">
            <summary>Sets the stub of PropertySelectorPolicy`1.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.InitializeStub">
            <summary>Initializes a new instance of type StubPropertySelectorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.SelectProperties(Unity.Builder.IBuilderContext,Unity.Policy.IPolicyList)">
            <summary>Sets the stub of PropertySelectorBase`1.SelectProperties(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.BuildPlan.Selection.Fakes.StubPropertySelectorPolicy`1.SelectPropertiesIBuilderContextIPolicyList">
            <summary>Sets the stub of PropertySelectorBase`1.SelectProperties(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Fakes.ShimBuilderContext">
            <summary>Shim type of Unity.ObjectBuilder.BuilderContext</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.ShimBuilderContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.ShimBuilderContext.#ctor(Unity.ObjectBuilder.BuilderContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AddResolverOverridesIEnumerableOfResolverOverride">
            <summary>Sets the shim of BuilderContext.AddResolverOverrides(IEnumerable`1&lt;ResolverOverride&gt; newOverrides)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.AddResolverOverridesIEnumerableOfResolverOverride">
            <summary>Sets the shim of BuilderContext.AddResolverOverrides(IEnumerable`1&lt;ResolverOverride&gt; newOverrides)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.BuildCompleteGet">
            <summary>Sets the shim of BuilderContext.get_BuildComplete()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.BuildCompleteSetBoolean">
            <summary>Sets the shim of BuilderContext.set_BuildComplete(Boolean value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.BuildKeyGet">
            <summary>Sets the shim of BuilderContext.get_BuildKey()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.BuildKeySetNamedTypeBuildKey">
            <summary>Sets the shim of BuilderContext.set_BuildKey(NamedTypeBuildKey value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.ChildContextGet">
            <summary>Sets the shim of BuilderContext.get_ChildContext()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.ChildContextSetIBuilderContext">
            <summary>Sets the shim of BuilderContext.set_ChildContext(IBuilderContext value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.ContainerGet">
            <summary>Sets the shim of BuilderContext.get_Container()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.CurrentOperationGet">
            <summary>Sets the shim of BuilderContext.get_CurrentOperation()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.CurrentOperationSetObject">
            <summary>Sets the shim of BuilderContext.set_CurrentOperation(Object value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.ExistingGet">
            <summary>Sets the shim of BuilderContext.get_Existing()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.ExistingSetObject">
            <summary>Sets the shim of BuilderContext.set_Existing(Object value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.GetOverriddenResolverType">
            <summary>Sets the shim of BuilderContext.GetOverriddenResolver(Type dependencyType)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.LifetimeGet">
            <summary>Sets the shim of BuilderContext.get_Lifetime()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.NewBuildUpNamedTypeBuildKeyActionOfIBuilderContext">
            <summary>Sets the shim of BuilderContext.NewBuildUp(NamedTypeBuildKey newBuildKey, Action`1&lt;IBuilderContext&gt; childCustomizationBlock)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.OriginalBuildKeyGet">
            <summary>Sets the shim of BuilderContext.get_OriginalBuildKey()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.PersistentPoliciesGet">
            <summary>Sets the shim of BuilderContext.get_PersistentPolicies()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.PoliciesGet">
            <summary>Sets the shim of BuilderContext.get_Policies()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.RecoveryStackGet">
            <summary>Sets the shim of BuilderContext.get_RecoveryStack()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.AllInstances.StrategiesGet">
            <summary>Sets the shim of BuilderContext.get_Strategies()</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.ShimBuilderContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.ShimBuilderContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.ShimBuilderContext.Bind(Unity.Builder.IBuilderContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.BuildCompleteGet">
            <summary>Sets the shim of BuilderContext.get_BuildComplete()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.BuildCompleteSetBoolean">
            <summary>Sets the shim of BuilderContext.set_BuildComplete(Boolean value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.BuildKeyGet">
            <summary>Sets the shim of BuilderContext.get_BuildKey()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.BuildKeySetNamedTypeBuildKey">
            <summary>Sets the shim of BuilderContext.set_BuildKey(NamedTypeBuildKey value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ChildContextGet">
            <summary>Sets the shim of BuilderContext.get_ChildContext()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ChildContextSetIBuilderContext">
            <summary>Sets the shim of BuilderContext.set_ChildContext(IBuilderContext value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ConstructorIUnityContainerIStrategyChainILifetimeContainerIPolicyListIPolicyListNamedTypeBuildKeyCompositeResolverOverride">
            <summary>Sets the shim of BuilderContext.BuilderContext(IUnityContainer container, IStrategyChain chain, ILifetimeContainer lifetime, IPolicyList persistentPolicies, IPolicyList transientPolicies, NamedTypeBuildKey buildKey, CompositeResolverOverride resolverOverrides)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ConstructorIUnityContainerIStrategyChainILifetimeContainerIPolicyListIPolicyListNamedTypeBuildKeyObject">
            <summary>Sets the shim of BuilderContext.BuilderContext(IUnityContainer container, IStrategyChain chain, ILifetimeContainer lifetime, IPolicyList persistentPolicies, IPolicyList transientPolicies, NamedTypeBuildKey buildKey, Object existing)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ConstructorIUnityContainerIStrategyChainILifetimeContainerIPolicyListNamedTypeBuildKeyObject">
            <summary>Sets the shim of BuilderContext.BuilderContext(IUnityContainer container, IStrategyChain chain, ILifetimeContainer lifetime, IPolicyList policies, NamedTypeBuildKey originalBuildKey, Object existing)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ContainerGet">
            <summary>Sets the shim of BuilderContext.get_Container()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.CurrentOperationGet">
            <summary>Sets the shim of BuilderContext.get_CurrentOperation()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.CurrentOperationSetObject">
            <summary>Sets the shim of BuilderContext.set_CurrentOperation(Object value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ExistingGet">
            <summary>Sets the shim of BuilderContext.get_Existing()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.ExistingSetObject">
            <summary>Sets the shim of BuilderContext.set_Existing(Object value)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.GetOverriddenResolverType">
            <summary>Sets the shim of BuilderContext.GetOverriddenResolver(Type dependencyType)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.LifetimeGet">
            <summary>Sets the shim of BuilderContext.get_Lifetime()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.NewBuildUpNamedTypeBuildKeyActionOfIBuilderContext">
            <summary>Sets the shim of BuilderContext.NewBuildUp(NamedTypeBuildKey newBuildKey, Action`1&lt;IBuilderContext&gt; childCustomizationBlock)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.OriginalBuildKeyGet">
            <summary>Sets the shim of BuilderContext.get_OriginalBuildKey()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.PersistentPoliciesGet">
            <summary>Sets the shim of BuilderContext.get_PersistentPolicies()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.PoliciesGet">
            <summary>Sets the shim of BuilderContext.get_Policies()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.RecoveryStackGet">
            <summary>Sets the shim of BuilderContext.get_RecoveryStack()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.ShimBuilderContext.StrategiesGet">
            <summary>Sets the shim of BuilderContext.get_Strategies()</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Fakes.StubBuilderContext">
            <summary>Stub type of Unity.ObjectBuilder.BuilderContext</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.StubBuilderContext.#ctor(Unity.IUnityContainer,Unity.Strategy.IStrategyChain,Unity.Lifetime.ILifetimeContainer,Unity.Policy.IPolicyList,Unity.Builder.NamedTypeBuildKey,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.StubBuilderContext.#ctor(Unity.IUnityContainer,Unity.Strategy.IStrategyChain,Unity.Lifetime.ILifetimeContainer,Unity.Policy.IPolicyList,Unity.Policy.IPolicyList,Unity.Builder.NamedTypeBuildKey,Unity.Resolution.CompositeResolverOverride)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.StubBuilderContext.#ctor(Unity.IUnityContainer,Unity.Strategy.IStrategyChain,Unity.Lifetime.ILifetimeContainer,Unity.Policy.IPolicyList,Unity.Policy.IPolicyList,Unity.Builder.NamedTypeBuildKey,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.StubBuilderContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Fakes.StubBuilderContext.InitializeStub">
            <summary>Initializes a new instance of type StubBuilderContext</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.StubBuilderContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Fakes.StubBuilderContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy">
            <summary>Shim type of Unity.ObjectBuilder.Policies.BuildKeyMappingPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.#ctor(Unity.ObjectBuilder.Policies.BuildKeyMappingPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.AllInstances.MapNamedTypeBuildKeyIBuilderContext">
            <summary>Sets the shim of BuildKeyMappingPolicy.Map(NamedTypeBuildKey buildKey, IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.Bind(Unity.Policy.IBuildKeyMappingPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.ConstructorNamedTypeBuildKey">
            <summary>Sets the shim of BuildKeyMappingPolicy.BuildKeyMappingPolicy(NamedTypeBuildKey newBuildKey)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimBuildKeyMappingPolicy.MapNamedTypeBuildKeyIBuilderContext">
            <summary>Sets the shim of BuildKeyMappingPolicy.Map(NamedTypeBuildKey buildKey, IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy">
            <summary>Shim type of Unity.ObjectBuilder.Policies.DefaultUnityMethodSelectorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.#ctor(Unity.ObjectBuilder.Policies.DefaultUnityMethodSelectorPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.AllInstances.CreateResolverParameterInfo">
            <summary>Sets the shim of DefaultUnityMethodSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.Bind(Unity.Policy.IMethodSelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.Constructor">
            <summary>Sets the shim of DefaultUnityMethodSelectorPolicy.DefaultUnityMethodSelectorPolicy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityMethodSelectorPolicy.CreateResolverParameterInfo">
            <summary>Sets the shim of DefaultUnityMethodSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy">
            <summary>Shim type of Unity.ObjectBuilder.Policies.DefaultUnityPropertySelectorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.#ctor(Unity.ObjectBuilder.Policies.DefaultUnityPropertySelectorPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.AllInstances.CreateResolverPropertyInfo">
            <summary>Sets the shim of DefaultUnityPropertySelectorPolicy.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.Bind(Unity.Policy.IPropertySelectorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.Constructor">
            <summary>Sets the shim of DefaultUnityPropertySelectorPolicy.DefaultUnityPropertySelectorPolicy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimDefaultUnityPropertySelectorPolicy.CreateResolverPropertyInfo">
            <summary>Sets the shim of DefaultUnityPropertySelectorPolicy.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy">
            <summary>Shim type of Unity.ObjectBuilder.Policies.GenericTypeBuildKeyMappingPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.#ctor(Unity.ObjectBuilder.Policies.GenericTypeBuildKeyMappingPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.AllInstances.DestinationTypeGet">
            <summary>Sets the shim of GenericTypeBuildKeyMappingPolicy.get_DestinationType()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.AllInstances.GuardSameNumberOfGenericArgumentsTypeInfo">
            <summary>Sets the shim of GenericTypeBuildKeyMappingPolicy.GuardSameNumberOfGenericArguments(TypeInfo sourceTypeInfo)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.AllInstances.MapNamedTypeBuildKeyIBuilderContext">
            <summary>Sets the shim of GenericTypeBuildKeyMappingPolicy.Map(NamedTypeBuildKey buildKey, IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.Bind(Unity.Policy.IBuildKeyMappingPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.ConstructorNamedTypeBuildKey">
            <summary>Sets the shim of GenericTypeBuildKeyMappingPolicy.GenericTypeBuildKeyMappingPolicy(NamedTypeBuildKey destinationKey)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.DestinationTypeGet">
            <summary>Sets the shim of GenericTypeBuildKeyMappingPolicy.get_DestinationType()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.GuardSameNumberOfGenericArgumentsTypeInfo">
            <summary>Sets the shim of GenericTypeBuildKeyMappingPolicy.GuardSameNumberOfGenericArguments(TypeInfo sourceTypeInfo)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimGenericTypeBuildKeyMappingPolicy.MapNamedTypeBuildKeyIBuilderContext">
            <summary>Sets the shim of GenericTypeBuildKeyMappingPolicy.Map(NamedTypeBuildKey buildKey, IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy">
            <summary>Shim type of Unity.ObjectBuilder.Policies.ResolveMappingPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.#ctor(Unity.ObjectBuilder.Policies.ResolveMappingPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.AllInstances.ResolveIBuilderContext">
            <summary>Sets the shim of ResolveMappingPolicy.Resolve(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.Bind(Unity.Policy.IBuildKeyMappingPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.Bind(Unity.Policy.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.Bind(Unity.Policy.IDependencyResolverPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.ConstructorNamedTypeBuildKey">
            <summary>Sets the shim of ResolveMappingPolicy.ResolveMappingPolicy(NamedTypeBuildKey newBuildKey)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.ShimResolveMappingPolicy.ResolveIBuilderContext">
            <summary>Sets the shim of ResolveMappingPolicy.Resolve(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.StubBuildKeyMappingPolicy">
            <summary>Stub type of Unity.ObjectBuilder.Policies.BuildKeyMappingPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubBuildKeyMappingPolicy.#ctor(Unity.Builder.NamedTypeBuildKey)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubBuildKeyMappingPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubBuildKeyMappingPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubBuildKeyMappingPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubBuildKeyMappingPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubBuildKeyMappingPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy">
            <summary>Stub type of Unity.ObjectBuilder.Policies.DefaultUnityMethodSelectorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.CreateResolver(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of DefaultUnityMethodSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.CreateResolverParameterInfo">
            <summary>Sets the stub of DefaultUnityMethodSelectorPolicy.CreateResolver(ParameterInfo parameter)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultUnityMethodSelectorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.SelectMethods(Unity.Builder.IBuilderContext,Unity.Policy.IPolicyList)">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityMethodSelectorPolicy.SelectMethodsIBuilderContextIPolicyList">
            <summary>Sets the stub of MethodSelectorPolicyBase`1.SelectMethods(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy">
            <summary>Stub type of Unity.ObjectBuilder.Policies.DefaultUnityPropertySelectorPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.CreateResolver(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of DefaultUnityPropertySelectorPolicy.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.CreateResolverPropertyInfo">
            <summary>Sets the stub of DefaultUnityPropertySelectorPolicy.CreateResolver(PropertyInfo property)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultUnityPropertySelectorPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.SelectProperties(Unity.Builder.IBuilderContext,Unity.Policy.IPolicyList)">
            <summary>Sets the stub of PropertySelectorBase`1.SelectProperties(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Policies.Fakes.StubDefaultUnityPropertySelectorPolicy.SelectPropertiesIBuilderContextIPolicyList">
            <summary>Sets the stub of PropertySelectorBase`1.SelectProperties(IBuilderContext context, IPolicyList resolverPolicyDestination)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.StubGenericTypeBuildKeyMappingPolicy">
            <summary>Stub type of Unity.ObjectBuilder.Policies.GenericTypeBuildKeyMappingPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubGenericTypeBuildKeyMappingPolicy.#ctor(Unity.Builder.NamedTypeBuildKey)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubGenericTypeBuildKeyMappingPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubGenericTypeBuildKeyMappingPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubGenericTypeBuildKeyMappingPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubGenericTypeBuildKeyMappingPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubGenericTypeBuildKeyMappingPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.StubIRegisteredNamesPolicy">
            <summary>Stub type of Unity.ObjectBuilder.Policies.IRegisteredNamesPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubIRegisteredNamesPolicy.#ctor">
            <summary>Initializes a new instance of type StubIRegisteredNamesPolicy</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Policies.Fakes.StubIRegisteredNamesPolicy.GetRegisteredNamesType">
            <summary>Sets the stub of IRegisteredNamesPolicy.GetRegisteredNames(Type type)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubIRegisteredNamesPolicy.Unity#ObjectBuilder#Policies#IRegisteredNamesPolicy#GetRegisteredNames(System.Type)">
            <summary>Sets the stub of IRegisteredNamesPolicy.GetRegisteredNames(Type type)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Policies.Fakes.StubResolveMappingPolicy">
            <summary>Stub type of Unity.ObjectBuilder.Policies.ResolveMappingPolicy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubResolveMappingPolicy.#ctor(Unity.Builder.NamedTypeBuildKey)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubResolveMappingPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Policies.Fakes.StubResolveMappingPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubResolveMappingPolicy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubResolveMappingPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Policies.Fakes.StubResolveMappingPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy">
            <summary>Shim type of Unity.ObjectBuilder.Strategies.ArrayResolutionStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.#ctor(Unity.ObjectBuilder.Strategies.ArrayResolutionStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.AllInstances.PreBuildUpIBuilderContext">
            <summary>Sets the shim of ArrayResolutionStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.Bind(Unity.Builder.Strategy.IBuilderStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.Constructor">
            <summary>Sets the shim of ArrayResolutionStrategy.ArrayResolutionStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the shim of ArrayResolutionStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.ResolveArrayOf1IBuilderContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Unity.Builder.IBuilderContext,System.Object})">
            <summary>Sets the shim of ArrayResolutionStrategy.ResolveArray(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimArrayResolutionStrategy.StaticConstructor">
            <summary>Sets the shim of ArrayResolutionStrategy.ArrayResolutionStrategy()</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy">
            <summary>Shim type of Unity.ObjectBuilder.Strategies.BuildKeyMappingStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.#ctor(Unity.ObjectBuilder.Strategies.BuildKeyMappingStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.AllInstances.PreBuildUpIBuilderContext">
            <summary>Sets the shim of BuildKeyMappingStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.Bind(Unity.Builder.Strategy.IBuilderStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.Constructor">
            <summary>Sets the shim of BuildKeyMappingStrategy.BuildKeyMappingStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildKeyMappingStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the shim of BuildKeyMappingStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy">
            <summary>Shim type of Unity.ObjectBuilder.Strategies.BuildPlanStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.#ctor(Unity.ObjectBuilder.Strategies.BuildPlanStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.AllInstances.PreBuildUpIBuilderContext">
            <summary>Sets the shim of BuildPlanStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.Bind(Unity.Builder.Strategy.IBuilderStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.Constructor">
            <summary>Sets the shim of BuildPlanStrategy.BuildPlanStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimBuildPlanStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the shim of BuildPlanStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy">
            <summary>Shim type of Unity.ObjectBuilder.Strategies.LifetimeStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.#ctor(Unity.ObjectBuilder.Strategies.LifetimeStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.AllInstances.GetLifetimePolicyForGenericTypeIBuilderContextIPolicyListOut">
            <summary>Sets the shim of LifetimeStrategy.GetLifetimePolicyForGenericType(IBuilderContext context, IPolicyList&amp; factorySource)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.AllInstances.GetLifetimePolicyIBuilderContextIPolicyListOut">
            <summary>Sets the shim of LifetimeStrategy.GetLifetimePolicy(IBuilderContext context, IPolicyList&amp; source)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.AllInstances.PostBuildUpIBuilderContext">
            <summary>Sets the shim of LifetimeStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.AllInstances.PreBuildUpIBuilderContext">
            <summary>Sets the shim of LifetimeStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.Bind(Unity.Builder.Strategy.IBuilderStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.Constructor">
            <summary>Sets the shim of LifetimeStrategy.LifetimeStrategy()</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.GetLifetimePolicyForGenericTypeIBuilderContextIPolicyListOut">
            <summary>Sets the shim of LifetimeStrategy.GetLifetimePolicyForGenericType(IBuilderContext context, IPolicyList&amp; factorySource)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.GetLifetimePolicyIBuilderContextIPolicyListOut">
            <summary>Sets the shim of LifetimeStrategy.GetLifetimePolicy(IBuilderContext context, IPolicyList&amp; source)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the shim of LifetimeStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the shim of LifetimeStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.ShimLifetimeStrategy.StaticConstructor">
            <summary>Sets the shim of LifetimeStrategy.LifetimeStrategy()</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy">
            <summary>Stub type of Unity.ObjectBuilder.Strategies.ArrayResolutionStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubArrayResolutionStrategy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.PostBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.PreBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of ArrayResolutionStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubArrayResolutionStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the stub of ArrayResolutionStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy">
            <summary>Stub type of Unity.ObjectBuilder.Strategies.BuildKeyMappingStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubBuildKeyMappingStrategy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.PostBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.PreBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuildKeyMappingStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubBuildKeyMappingStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the stub of BuildKeyMappingStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy">
            <summary>Stub type of Unity.ObjectBuilder.Strategies.BuildPlanStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubBuildPlanStrategy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.PostBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the stub of BuilderStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.PreBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of BuildPlanStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubBuildPlanStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the stub of BuildPlanStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy">
            <summary>Stub type of Unity.ObjectBuilder.Strategies.LifetimeStrategy</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubLifetimeStrategy</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.PostBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of LifetimeStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.PostBuildUpIBuilderContext">
            <summary>Sets the stub of LifetimeStrategy.PostBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="M:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.PreBuildUp(Unity.Builder.IBuilderContext)">
            <summary>Sets the stub of LifetimeStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="F:Unity.ObjectBuilder.Strategies.Fakes.StubLifetimeStrategy.PreBuildUpIBuilderContext">
            <summary>Sets the stub of LifetimeStrategy.PreBuildUp(IBuilderContext context)</summary>
        </member>
        <member name="T:Unity.Utility.Fakes.ShimRecoveryStack">
            <summary>Shim type of Unity.Utility.RecoveryStack</summary>
        </member>
        <member name="M:Unity.Utility.Fakes.ShimRecoveryStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Unity.Utility.Fakes.ShimRecoveryStack.#ctor(Unity.Utility.RecoveryStack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.AddIRequiresRecovery">
            <summary>Sets the shim of RecoveryStack.Add(IRequiresRecovery recovery)</summary>
        </member>
        <member name="T:Unity.Utility.Fakes.ShimRecoveryStack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.AllInstances.AddIRequiresRecovery">
            <summary>Sets the shim of RecoveryStack.Add(IRequiresRecovery recovery)</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.AllInstances.CountGet">
            <summary>Sets the shim of RecoveryStack.get_Count()</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.AllInstances.ExecuteRecovery">
            <summary>Sets the shim of RecoveryStack.ExecuteRecovery()</summary>
        </member>
        <member name="M:Unity.Utility.Fakes.ShimRecoveryStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Utility.Fakes.ShimRecoveryStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Unity.Utility.Fakes.ShimRecoveryStack.Bind(Unity.Exceptions.IRecoveryStack)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.Constructor">
            <summary>Sets the shim of RecoveryStack.RecoveryStack()</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.CountGet">
            <summary>Sets the shim of RecoveryStack.get_Count()</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.ShimRecoveryStack.ExecuteRecovery">
            <summary>Sets the shim of RecoveryStack.ExecuteRecovery()</summary>
        </member>
        <member name="T:Unity.Utility.Fakes.StubRecoveryStack">
            <summary>Stub type of Unity.Utility.RecoveryStack</summary>
        </member>
        <member name="M:Unity.Utility.Fakes.StubRecoveryStack.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.StubRecoveryStack.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Unity.Utility.Fakes.StubRecoveryStack.InitializeStub">
            <summary>Initializes a new instance of type StubRecoveryStack</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.StubRecoveryStack.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Unity.Utility.Fakes.StubRecoveryStack.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
